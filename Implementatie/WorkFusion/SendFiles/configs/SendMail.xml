<?xml version="1.0" encoding="UTF-8"?>
<config
	xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy">
	<robotics-flow>
		<robot driver="universal" close-on-completion="true"
			start-in-private="true">
			<capability name="SEARCH_ALL_WINDOWS" value="true" />
			<script><![CDATA[
                import com.workfusion.studio.rpa.recorder.api.internal.representation.*
                import com.workfusion.studio.rpa.recorder.api.*
                import com.workfusion.studio.rpa.recorder.api.types.*
                import com.workfusion.studio.rpa.recorder.api.custom.*
                import static com.workfusion.studio.rpa.recorder.api.RandomValues.CharacterSet.*
                
                /*
                Based upon:
                https://docs.smartthings.com/en/latest/getting-started/groovy-basics.html
				https://www.vogella.com/tutorials/Groovy/article.html
                https://community.atlassian.com/t5/Jira-questions/Sending-email-using-gmail-smtp-with-groovy-script-fails/qaq-p/121512
				https://gist.github.com/hatewx/a3a1ec881437f25d5346100b4e981c3d
				https://forum.workfusion.com/t/how-to-send-mail-with-attachment/351
				https://forum.workfusion.com/t/send-email-with-custom-script-groovy/51997
                */
                
                // Custom imports
                import javax.mail.*
				import javax.mail.internet.*
 
				// Mapping the variables
				@CustomScriptAction(
					input = ['email', 'password', 'to', 'from']'
				)
 				
 				// Sending the mail
 				def customScript() {
					String host = "smtp.gmail.com"
					String port = "587"
					
					Properties props = System.getProperties()
					props.put("mail.smtp.user", email)
					props.put("mail.smtp.host", host)
					props.put("mail.smtp.port", port)
					props.put("mail.smtp.starttls.enable","true")
					props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory")
					props.put("mail.smtp.ssl.trust", host)

					MimeMessage message = new MimeMessage(Session.getDefaultInstance(props))
					message.setFrom(new InternetAddress(from))
					message.addRecipients(Message.RecipientType.TO, new InternetAddress(to))
					message.setSubject("Some Entity Thresholds Were Not Reached")
					message.setContent("TestMessage", "text/plain")
					
					try {
    					Transport.send(message, email, password)
					} catch (MessagingException e) {
    					e.printStackTrace()
					}
 				}
  
            ]]></script>
		</robot>
	</robotics-flow>
	<export include-original-data="true" />
</config>